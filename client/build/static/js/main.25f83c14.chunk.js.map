{"version":3,"sources":["components/Header.js","App.js","serviceWorker.js","components/Edit.js","components/Create.js","components/Show.js","index.js"],"names":["Header","react_default","a","createElement","className","href","class","aria-hidden","Component","GET_RESERVATIONS","gql","_templateObject","DELETE_RESERVATION","_templateObject2","App","_this","this","react_apollo_esm","pollInterval","query","_ref","loading","error","data","concat","message","console","log","reservations","components_Header","react_router_dom","to","map","reservation","index","key","_id","guest_name","hotel_name","arrival_date","departure_date","mutation","onCompleted","props","history","push","removeReservation","_ref2","onSubmit","e","preventDefault","window","confirm","variables","id","title","type","Boolean","location","hostname","match","GET_RESERVATION","Edit_templateObject","UPDATE_RESERVATION","Edit_templateObject2","Edit","reservationId","params","updateReservation","value","htmlFor","required","name","ref","node","placeholder","defaultValue","cols","rows","ADD_RESERVATION","Create_templateObject","Create","addReservation","Show_templateObject","Show_templateObject2","Show","client","ApolloClient","uri","ReactDOM","render","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25f83c14.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n// import '../App.css';\n// import gql from 'graphql-tag';\n// import { Query, Mutation } from 'react-apollo';\n\n\nclass Header extends Component {\n\n  render() {\n    return (\n                <div className=\"header\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-12 col-xs-12\">\n                                <a className=\"brand\" href=\"javascript:void(0)\"><i class=\"fa fa-hospital-o\" aria-hidden=\"true\"></i> Hotel Reservation System</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport Header  from './components/Header';\n\nconst GET_RESERVATIONS = gql`\n  {\n    reservations {\n      _id\n      guest_name\n      hotel_name\n      arrival_date\n      departure_date\n    }\n  }\n`;\n\nconst DELETE_RESERVATION = gql`\n  mutation removeReservation($id: String!) {\n    removeReservation(id:$id) {\n      _id\n    }\n  }\n`;\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Query pollInterval={500} query={GET_RESERVATIONS}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) return `Error! ${error.message}`;\n            console.log(data.reservations);\n          return (\n            <div className=\"wrapper\">\n              <Header />\n              <div className=\"container\">              \n                <div className=\"panel panel-default\">\n                  <div className=\"panel-heading\">\n                    <div className=\"row\">\n                      <div className=\"col-md-9\">\n                        <h4 className=\"panel-title\">\n                            Reservations List\n                        </h4>\n                      </div>\n                      <div className=\"col-md-3 text-right\">\n                        <Link className=\"btn-primary\" to=\"/create\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>Add Reservation</Link>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"panel-body\">\n                    <table className=\"table table-stripe\">\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Guest Name</th>\n                          <th>Hotel Name</th>\n                          <th>Arrival Date</th>\n                          <th>Departure Date</th>\n                          <th className=\"text-center\">Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {data.reservations.map((reservation, index) => (\n\n                          <tr key={index}>\n                          <td>{index + 1}</td>\n                            <td><Link to={`/show/${reservation._id}`}>{reservation.guest_name}</Link></td>\n                            <td>{reservation.hotel_name}</td>\n                            <td>{reservation.arrival_date}</td>\n                            <td>{reservation.departure_date}</td>\n                            <td className=\"action-items text-center\">\n                                                                                        \n\n                              <Mutation mutation={DELETE_RESERVATION} key={reservation._id} onCompleted={() => this.props.history.push('/')}>\n                                  {(removeReservation, { loading, error }) => (\n                                      <div>\n                                          <form\n                                              onSubmit={e => {\n                                                  e.preventDefault();\n                                                  if(window.confirm('Are you sure you want to delete this reservation?') ){\n                                                    removeReservation({ variables: { id: reservation._id } });\n                                                  }\n                                                  else\n                                                      return false;\n                                              }}>     \n                                              <Link className=\"icon-theme\" title=\"Edit\" to={`/edit/${reservation._id}`}><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></Link>                                             \n                                                  <button type=\"submit\" className=\"icon-theme\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>                                                    \n                                          </form>\n                                      {loading && <p>Loading...</p>}\n                                      {error && <p>Error :( Please try again</p>}\n                                      </div>\n                                  )}\n                              </Mutation>                              \n                            </td>\n                            \n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>              \n            </div>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nimport Header  from './Header';\n\nconst GET_RESERVATION = gql`\n    query reservation($reservationId: String) {\n        reservation(id: $reservationId) {\n            _id\n            guest_name\n            hotel_name\n            arrival_date\n            departure_date\n            updated_date\n        }\n    }\n`;\n\nconst UPDATE_RESERVATION = gql`\n    mutation updateReservation(\n        $id: String!,\n        $guest_name: String!,\n        $hotel_name: String!,\n        $arrival_date: String!,\n        $departure_date: String!) {\n        updateReservation(\n        id: $id,\n        guest_name: $guest_name,\n        hotel_name: $hotel_name,\n        arrival_date: $arrival_date,\n        departure_date: $departure_date) {\n            updated_date\n        }\n    }\n`;\n\nclass Edit extends Component {\n\n  render() {\n    let guest_name, hotel_name, arrival_date, departure_date;\n    return (\n        <Query query={GET_RESERVATION} variables={{ reservationId: this.props.match.params.id }}>\n            {({ loading, error, data }) => {\n                console.log(data);\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n                \n                return (\n                    <Mutation mutation={UPDATE_RESERVATION} key={data.reservation._id} onCompleted={() => this.props.history.push(`/`)}>\n                        {(updateReservation, { loading, error }) => (\n                            <div className=\"wrapper\">\n                                <Header />\n                                <div className=\"container\">\n                                    <div className=\"panel panel-default\">\n                                        <div className=\"panel-heading\">\n                                          <div className=\"row\">\n                                            <div className=\"col-md-9\">\n                                              <h4 className=\"panel-title\">\n                                                Update Reservation\n                                              </h4>\n                                            </div>\n                                            <div className=\"col-md-3 text-right\">\n                                              <Link className=\"btn-primary\" to=\"/\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>Back</Link>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div className=\"panel-body\">\n                                            <form onSubmit={e => {\n                                                e.preventDefault();\n                                                updateReservation({ variables: { id: data.reservation._id, guest_name: guest_name.value, hotel_name: hotel_name.value, arrival_date: arrival_date.value, departure_date: departure_date.value } });\n                                                guest_name.value = \"\";\n                                                hotel_name.value = \"\";\n                                                arrival_date.value = \"\";\n                                                departure_date.value = \"\";\n                                            }}>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"guest_name\">Guest Name:</label>\n                                                    <input type=\"text\" required className=\"form-control\" name=\"guest_name\" ref={node => {\n                                                        guest_name = node;\n                                                    }} placeholder=\"Guest Name\" defaultValue={data.reservation.guest_name} />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"title\">Hotel Name:</label>\n                                                    <input type=\"text\" required className=\"form-control\" name=\"hotel_name\" ref={node => {\n                                                        hotel_name = node;\n                                                    }} placeholder=\"Hotel Name\" defaultValue={data.reservation.hotel_name} />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"author\">Arrival Date:</label>\n                                                    <input type=\"date\" className=\"form-control\" name=\"arrival_date\" ref={node => {\n                                                        arrival_date = node;\n                                                    }} placeholder=\"Arrival Date\" defaultValue={data.reservation.arrival_date} />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"description\">Departure Date:</label>\n                                                    <input type=\"date\" className=\"form-control\" name=\"departure_date\" ref={node => {\n                                                        departure_date = node;\n                                                    }} placeholder=\"Departure Date\" cols=\"80\" rows=\"3\" defaultValue={data.reservation.departure_date} />\n                                                </div>\n                                                <div className=\"divider-line\"></div>\n                                                <div className=\"btn-area text-right\">\n                                                    <button type=\"submit\" className=\"btn btn-success\"><i class=\"fa fa-check\" aria-hidden=\"true\" ></i>Submit</button>\n                                                </div>\n                                            </form>\n                                            {loading && <p>Loading...</p>}\n                                            {error && <p>Error :( Please try again</p>}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </Mutation>\n                );\n            }}\n        </Query>\n    );\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport { Link } from 'react-router-dom';\nimport Header  from './Header';\n\nconst ADD_RESERVATION = gql`\n    mutation AddReservation(\n        $guest_name: String!,\n        $hotel_name: String!,\n        $arrival_date: String!,\n        $departure_date: String!) {\n        addReservation(\n            guest_name: $guest_name,\n            hotel_name: $hotel_name,\n            arrival_date: $arrival_date,\n            departure_date: $departure_date) {\n            _id\n        }\n    }\n`;\n\nclass Create extends Component {\n  \n    render() {\n      let guest_name, hotel_name, arrival_date, departure_date;\n      return (\n        <Mutation mutation={ADD_RESERVATION} onCompleted={() => this.props.history.push('/')}>\n            {(addReservation, { loading, error }) => (\n                <div className=\"wrapper\">\n                    <Header />\n                    <div className=\"container\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-heading\">\n                              <div className=\"row\">\n                                <div className=\"col-md-9\">\n                                  <h4 className=\"panel-title\">\n                                    Add Reservation\n                                  </h4>\n                                </div>\n                                <div className=\"col-md-3 text-right\">\n                                  <Link className=\"btn-primary\" to=\"/\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>Back</Link>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"panel-body\">\n\n                                <form onSubmit={e => {\n                                    e.preventDefault();\n                                    addReservation({ variables: { guest_name: guest_name.value, hotel_name: hotel_name.value, arrival_date: arrival_date.value, departure_date: departure_date.value } });\n                                    guest_name.value = \"\";\n                                    hotel_name.value = \"\";\n                                    arrival_date.value = \"\";\n                                    departure_date.value = \"\";\n                                }}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"isbn\">Guest Name:</label>\n                                        <input required type=\"text\" className=\"form-control\" name=\"guest_name\" ref={node => {\n                                            guest_name = node;\n                                        }} placeholder=\"Guest Name\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"title\">Hotel Name:</label>\n                                        <input type=\"text\" required className=\"form-control\" name=\"hotel_name\" ref={node => {\n                                            hotel_name = node;\n                                        }} placeholder=\"Hotel Name\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"author\">Arrival Date:</label>\n                                        <input type=\"date\" className=\"form-control\" name=\"arrival_date\" ref={node => {\n                                            arrival_date = node;\n                                        }} placeholder=\"Arrival Date\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"description\">Departure Date:</label>\n                                        <input type=\"date\" className=\"form-control\" name=\"departure_date\" ref={node => {\n                                            departure_date = node;\n                                        }} placeholder=\"Departure Date\" />\n                                    </div>\n                                    <div className=\"divider-line\"></div>\n                                    <div className=\"btn-area text-right\">\n                                        <button type=\"submit\" className=\"btn btn-success\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i>Submit</button>\n                                    </div>\n                                </form>\n                                {loading && <p>Loading...</p>}\n                                {error && <p>Error :( Please try again</p>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Mutation>\n      );\n    }\n  }\n  \n  export default Create;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport Header  from './Header';\n\nconst GET_RESERVATION = gql`\n    query reservation($reservationId: String) {\n        reservation(id: $reservationId) {\n            _id\n            guest_name\n            hotel_name\n            arrival_date\n            departure_date\n            updated_date\n        }\n    }\n`;\n\nconst DELETE_RESERVATION = gql`\n  mutation removeReservation($id: String!) {\n    removeReservation(id:$id) {\n      _id\n    }\n  }\n`;\n\nclass Show extends Component {\n\n  render() {\n    return (\n        <Query pollInterval={500} query={GET_RESERVATION} variables={{ reservationId: this.props.match.params.id }}>\n            {({ loading, error, data }) => {\n                if (loading) return 'Loading...';\n                if (error) return `Error! ${error.message}`;\n        \n                return (\n                    <div className=\"wrapper\">\n                        <Header />\n                        <div className=\"container\">\n                            <div className=\"panel panel-default\">\n                                <div className=\"panel-heading\">\n                                  <div className=\"row\">\n                                    <div className=\"col-md-9\">\n                                      <h4 className=\"panel-title\">\n                                        Reservation Details\n                                      </h4>\n                                    </div>\n                                    <div className=\"col-md-3 text-right\">\n                                      <Link className=\"btn-primary\" to=\"/\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>Back</Link>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"panel-body\">\n                                    \n                                    <div className=\"reservation-dtls\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-2 col-sm-2 col-xs-12\">\n                                                <label className=\"lbl-title\">Guest Name</label>\n                                            </div>\n                                            <div className=\"col-md-10 col-sm-10 col-xs-12\">\n                                                <label className=\"lbl-value\">{data.reservation.guest_name}</label>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-2 col-sm-2 col-xs-12\">\n                                                <label className=\"lbl-title\">Hotel Name</label>\n                                            </div>\n                                            <div className=\"col-md-10 col-sm-10 col-xs-12\">\n                                                <label className=\"lbl-value\">{data.reservation.hotel_name}</label>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-2 col-sm-2 col-xs-12\">\n                                                <label className=\"lbl-title\">Arrival Date</label>\n                                            </div>\n                                            <div className=\"col-md-10 col-sm-10 col-xs-12\">\n                                                <label className=\"lbl-value\">{data.reservation.arrival_date}</label>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-2 col-sm-2 col-xs-12\">\n                                                <label className=\"lbl-title\">Departure Date</label>\n                                            </div>\n                                            <div className=\"col-md-10 col-sm-10 col-xs-12\">\n                                                <label className=\"lbl-value\">{data.reservation.departure_date}</label>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <Mutation mutation={DELETE_RESERVATION} key={data.reservation._id} onCompleted={() => this.props.history.push('/')}>\n                                        {(removeReservation, { loading, error }) => (\n                                            <div>\n                                                <form\n                                                    onSubmit={e => {\n                                                        e.preventDefault();\n                                                        removeReservation({ variables: { id: data.reservation._id } });\n                                                    }}>\n                                                    <div className=\"divider-line\"></div>\n                                                    <div className=\"btn-area text-right\">\n                                                        <Link to={`/edit/${data.reservation._id}`} className=\"btn btn-success\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></i>Edit</Link>&nbsp;\n                                                        <button type=\"submit\" className=\"btn btn-danger\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>Delete</button>\n                                                    </div>\n                                                </form>\n                                            {loading && <p>Loading...</p>}\n                                            {error && <p>Error :( Please try again</p>}\n                                            </div>\n                                        )}\n                                    </Mutation>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            }}\n        </Query>\n    );\n  }\n}\n\nexport default Show;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './assets/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\n\nconst client = new ApolloClient({ uri: 'http://devreservationapi.56-north.com/graphql' });\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Router>\n            <div>\n                <Route exact path='/' component={App} />\n                <Route path='/edit/:id' component={Edit} />\n                <Route path='/create' component={Create} />\n                <Route path='/show/:id' component={Show} />\n            </div>\n        </Router>\n    </ApolloProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}